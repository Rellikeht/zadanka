AccessModifierOffset: -2

AlignAfterOpenBracket: Align

AlignArrayOfStructures: None

AlignConsecutiveAssignments:
  AcrossComments: no
  AcrossEmptyLines: no
  AlignCompound: no
  Enabled: no
  PadOperators: yes

AlignConsecutiveBitFields:
  AcrossComments: no
  AcrossEmptyLines: no
  AlignCompound: no
  Enabled: no
  PadOperators: no

AlignConsecutiveDeclarations:
  AcrossComments: no
  AcrossEmptyLines: no
  AlignCompound: no
  Enabled: no
  PadOperators: no

AlignConsecutiveMacros:
  AcrossComments: no
  AcrossEmptyLines: no
  AlignCompound: no
  Enabled: no
  PadOperators: no

AlignConsecutiveShortCaseStatements:
  AcrossComments: no
  AcrossEmptyLines: no
  AlignCaseColons: no
  Enabled: no

AlignEscapedNewlines: Right

AlignOperands: Align

AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 0

AllowAllArgumentsOnNextLine: yes

AllowAllParametersOfDeclarationOnNextLine: yes

AllowShortBlocksOnASingleLine: Never

AllowShortCaseLabelsOnASingleLine: no

AllowShortEnumsOnASingleLine: yes

AllowShortFunctionsOnASingleLine: All

AllowShortIfStatementsOnASingleLine: Never

AllowShortLambdasOnASingleLine: All

AllowShortLoopsOnASingleLine: no

AlwaysBreakAfterDefinitionReturnType: None

AlwaysBreakAfterReturnType: None

AlwaysBreakBeforeMultilineStrings: no

AlwaysBreakTemplateDeclarations: MultiLine

AttributeMacros:
  - __capability

BasedOnStyle: LLVM

BinPackArguments: yes

BinPackParameters: yes

BitFieldColonSpacing: Both

BraceWrapping:
  AfterCaseLabel: no
  AfterClass: no
  AfterControlStatement: Never
  AfterEnum: no
  AfterExternBlock: no
  AfterFunction: no
  AfterNamespace: no
  AfterObjCDeclaration: no
  AfterStruct: no
  AfterUnion: no
  BeforeCatch: no
  BeforeElse: no
  BeforeLambdaBody: no
  BeforeWhile: no
  IndentBraces: no
  SplitEmptyFunction: yes
  SplitEmptyNamespace: yes
  SplitEmptyRecord: yes

BreakAfterAttributes: Never

BreakAfterJavaFieldAnnotations: no

BreakArrays: yes

BreakBeforeBinaryOperators: None

BreakBeforeBraces: Attach

BreakBeforeConceptDeclarations: Always

BreakBeforeInlineASMColon: OnlyMultiline

BreakBeforeTernaryOperators: yes

BreakConstructorInitializers: BeforeColon

BreakInheritanceList: BeforeColon

BreakStringLiterals: yes

ColumnLimit: 80

CommentPragmas: '^ IWYU pragma:'

CompactNamespaces: no

ConstructorInitializerIndentWidth: 4

ContinuationIndentWidth: 4

Cpp11BracedListStyle: yes

DerivePointerAlignment: no

DisableFormat: no

EmptyLineAfterAccessModifier: Never

EmptyLineBeforeAccessModifier: LogicalBlock

ExperimentalAutoDetectBinPacking: no

FixNamespaceComments: yes

ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH

IfMacros:
  - KJ_IF_MAYBE

IncludeBlocks: Preserve

IncludeCategories:
  - CaseSensitive: no
    Priority: 2
    Regex: ^"(llvm|llvm-c|clang|clang-c)/
    SortPriority: 0
  - CaseSensitive: no
    Priority: 3
    Regex: ^(<|"(gtest|gmock|isl|json)/)
    SortPriority: 0
  - CaseSensitive: no
    Priority: 1
    Regex: .*
    SortPriority: 0

IncludeIsMainRegex: (Test)?$

IncludeIsMainSourceRegex: ''

IndentAccessModifiers: no

IndentCaseBlocks: no

IndentCaseLabels: no

IndentExternBlock: AfterExternBlock

IndentGotoLabels: yes

IndentPPDirectives: None

IndentRequiresClause: yes

IndentWidth: 4

IndentWrappedFunctionNames: no

InsertBraces: no

InsertNewlineAtEOF: no

InsertTrailingCommas: None

IntegerLiteralSeparator:
  Binary: 0
  BinaryMinDigits: 0
  Decimal: 0
  DecimalMinDigits: 0
  Hex: 0
  HexMinDigits: 0

JavaScriptQuotes: Leave

JavaScriptWrapImports: yes

KeepEmptyLinesAtEOF: no

KeepEmptyLinesAtTheStartOfBlocks: yes

LambdaBodyIndentation: Signature

Language: Cpp

LineEnding: DeriveLF

MacroBlockBegin: ''

MacroBlockEnd: ''

MaxEmptyLinesToKeep: 1

NamespaceIndentation: None

ObjCBinPackProtocolList: Auto

ObjCBlockIndentWidth: 2

ObjCBreakBeforeNestedBlockParam: yes

ObjCSpaceAfterProperty: no

ObjCSpaceBeforeProtocolList: yes

PPIndentWidth: -1

PackConstructorInitializers: BinPack

PenaltyBreakAssignment: 2

PenaltyBreakBeforeFirstCallParameter: 19

PenaltyBreakComment: 300

PenaltyBreakFirstLessLess: 120

PenaltyBreakOpenParenthesis: 0

PenaltyBreakString: 1000

PenaltyBreakTemplateDeclaration: 10

PenaltyExcessCharacter: 1000000

PenaltyIndentedWhitespace: 0

PenaltyReturnTypeOnItsOwnLine: 60

PointerAlignment: Right

QualifierAlignment: Leave

ReferenceAlignment: Pointer

ReflowComments: yes

RemoveBracesLLVM: no

RemoveParentheses: Leave

RemoveSemicolon: no

RequiresClausePosition: OwnLine

RequiresExpressionIndentation: OuterScope

SeparateDefinitionBlocks: Leave

ShortNamespaceLines: 1

SortIncludes: CaseSensitive

SortJavaStaticImport: Before

SortUsingDeclarations: LexicographicNumeric

SpaceAfterCStyleCast: no

SpaceAfterLogicalNot: no

SpaceAfterTemplateKeyword: yes

SpaceAroundPointerQualifiers: Default

SpaceBeforeAssignmentOperators: yes

SpaceBeforeCaseColon: no

SpaceBeforeCpp11BracedList: no

SpaceBeforeCtorInitializerColon: yes

SpaceBeforeInheritanceColon: yes

SpaceBeforeJsonColon: no

SpaceBeforeParens: ControlStatements

SpaceBeforeParensOptions:
  AfterControlStatements: yes
  AfterForeachMacros: yes
  AfterFunctionDeclarationName: no
  AfterFunctionDefinitionName: no
  AfterIfMacros: yes
  AfterOverloadedOperator: no
  AfterRequiresInClause: no
  AfterRequiresInExpression: no
  BeforeNonEmptyParentheses: no

SpaceBeforeRangeBasedForLoopColon: yes

SpaceBeforeSquareBrackets: no

SpaceInEmptyBlock: no

SpacesBeforeTrailingComments: 1

SpacesInAngles: Never

SpacesInContainerLiterals: yes

SpacesInLineCommentPrefix:
  Maximum: -1
  Minimum: 1

SpacesInParens: Never

SpacesInParensOptions:
  InCStyleCasts: no
  InConditionalStatements: no
  InEmptyParentheses: no
  Other: no

SpacesInSquareBrackets: no

Standard: Latest

StatementAttributeLikeMacros:
  - Q_EMIT

StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION

TabWidth: 8

UseTab: Never

VerilogBreakBetweenInstancePorts: yes

WhitespaceSensitiveMacros:
  - BOOST_PP_STRINGIZE
  - CF_SWIFT_NAME
  - NS_SWIFT_NAME
  - PP_STRINGIZE
  - STRINGIZE
