solve([
        a*x0**2+b*x0+c=y0,
        a*x1**2+b*x1+c=y1,
        2*a*x0+b = 2*a*x1+b
],[a,b,c])

s = solve([
        a1 * x0^3 + b1 * x0^2 + c1 * x0 + d1 = y0,
        a1 * x1^3 + b1 * x1^2 + c1 * x1 + d1 = y1,
        a1 * x2^3 + b1 * x2^2 + c1 * x2 + d1 = y2,
        a2 * x2^3 + b2 * x2^2 + c2 * x2 + d2 = y2,
        diff(a1 * x1^3 + b1 * x1^2 + c1 * x1 + d1, x1) =
            diff(a2 * x1^3 + b2 * x1^2 + c2 * x1 + d2, x1),
        diff(a1 * x2^3 + b1 * x2^2 + c1 * x2 + d1, x2) =
            diff(a2 * x2^3 + b2 * x2^2 + c2 * x2 + d2, x2),
        diff(diff(a1 * x1^3 + b1 * x1^2 + c1 * x1 + d1, x1)) =
            diff(diff(a1 * x2^3 + b1 * x2^2 + c1 * x2 + d1, x2)),
        diff(diff(a2 * x1^3 + b2 * x1^2 + c2 * x1 + d2, x1)) =
            diff(diff(a2 * x2^3 + b2 * x2^2 + c2 * x2 + d2, x2))
    ],
    [a1, b1, c1, d1, a2, b2, c2, d2])

@time simp = (x -> Symbolics.simplify(x, threaded=true)).(sol)

# using Base.Threads
# simp = Vector(0:7)
# @time @threads for i = 1:8
#     simp[i] = Symbolics.simplify(sol[i])
# end

