# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `SimpleService.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Demo
_M_Demo = Ice.openModule('Demo')
__name__ = 'Demo'

_M_Demo._t_SimpleService = IcePy.defineValue('::Demo::SimpleService', Ice.Value, -1, (), False, True, None, ())

if 'SimpleServicePrx' not in _M_Demo.__dict__:
    _M_Demo.SimpleServicePrx = Ice.createTempClass()
    class SimpleServicePrx(Ice.ObjectPrx):

        def getIdentity(self, context=None):
            return _M_Demo.SimpleService._op_getIdentity.invoke(self, ((), context))

        def getIdentityAsync(self, context=None):
            return _M_Demo.SimpleService._op_getIdentity.invokeAsync(self, ((), context))

        def begin_getIdentity(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.SimpleService._op_getIdentity.begin(self, ((), _response, _ex, _sent, context))

        def end_getIdentity(self, _r):
            return _M_Demo.SimpleService._op_getIdentity.end(self, _r)

        def getServantType(self, context=None):
            return _M_Demo.SimpleService._op_getServantType.invoke(self, ((), context))

        def getServantTypeAsync(self, context=None):
            return _M_Demo.SimpleService._op_getServantType.invokeAsync(self, ((), context))

        def begin_getServantType(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.SimpleService._op_getServantType.begin(self, ((), _response, _ex, _sent, context))

        def end_getServantType(self, _r):
            return _M_Demo.SimpleService._op_getServantType.end(self, _r)

        def process(self, input, context=None):
            return _M_Demo.SimpleService._op_process.invoke(self, ((input, ), context))

        def processAsync(self, input, context=None):
            return _M_Demo.SimpleService._op_process.invokeAsync(self, ((input, ), context))

        def begin_process(self, input, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.SimpleService._op_process.begin(self, ((input, ), _response, _ex, _sent, context))

        def end_process(self, _r):
            return _M_Demo.SimpleService._op_process.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.SimpleServicePrx.ice_checkedCast(proxy, '::Demo::SimpleService', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.SimpleServicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::SimpleService'
    _M_Demo._t_SimpleServicePrx = IcePy.defineProxy('::Demo::SimpleService', SimpleServicePrx)

    _M_Demo.SimpleServicePrx = SimpleServicePrx
    del SimpleServicePrx

    _M_Demo.SimpleService = Ice.createTempClass()
    class SimpleService(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::SimpleService', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::SimpleService'

        @staticmethod
        def ice_staticId():
            return '::Demo::SimpleService'

        def getIdentity(self, current=None):
            raise NotImplementedError("servant method 'getIdentity' not implemented")

        def getServantType(self, current=None):
            raise NotImplementedError("servant method 'getServantType' not implemented")

        def process(self, input, current=None):
            raise NotImplementedError("servant method 'process' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_SimpleServiceDisp)

        __repr__ = __str__

    _M_Demo._t_SimpleServiceDisp = IcePy.defineClass('::Demo::SimpleService', SimpleService, (), None, ())
    SimpleService._ice_type = _M_Demo._t_SimpleServiceDisp

    SimpleService._op_getIdentity = IcePy.Operation('getIdentity', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())
    SimpleService._op_getServantType = IcePy.Operation('getServantType', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())
    SimpleService._op_process = IcePy.Operation('process', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), ())

    _M_Demo.SimpleService = SimpleService
    del SimpleService

# End of module Demo
