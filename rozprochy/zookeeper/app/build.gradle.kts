/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    java
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("org.apache.zookeeper:zookeeper:3.9.3")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.App"
}

tasks {
    named<Test>("test") {
        // Use JUnit Platform for unit tests.
        useJUnitPlatform()
    }

    register<JavaExec>("Executor") {
        // arguments
        // if(project.hasProperty("argv")) {
        //     args(project.property("argv").split(','))
        //     // args(project.property("argv"))
        // }
        args(System.getProperty("exec.args", "").split(","))

        // main class
        mainClass.set("zadanie.Executor")
        // to use compiled classes 
        dependsOn("classes")
        // to have working standard input
        standardInput = System.`in`
        // for gradle to see main method/class ?
        classpath = sourceSets["main"].runtimeClasspath
    }
}

// tasks.getByName("run", JavaExec::class) {
//     standardInput = System.`in`
// }
